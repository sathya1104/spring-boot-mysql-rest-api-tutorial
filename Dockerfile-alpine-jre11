# docker build -t alpine-jre11 . -f Dockerfile-alpine-jre11 --no-cache
FROM alpine:latest AS stage-0
# Prefer openjdk11 over openjdk11-jre for jlink and we can use it remove more default modules and reduce image size
RUN set -eux;\
 apk --no-cache --virtual add openjdk11 \
     --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
WORKDIR /usr/lib/jvm/default-jvm/jre/bin/
RUN set -eux;\
    ./jlink --output jre --compress=2 --no-header-files --no-man-pages --module-path ../jmods --add-modules jdk.aot,jdk.xml.dom,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto

FROM alpine:latest
MAINTAINER "Sathya KUMARASWAMY <sathya1104@gmail.com>"
ENV OS_RELEASE="Alpine Linux v3.14"

# Installed main dependencies:
#  ca-certificates-bundle-20191127-r5 x86_64: for certificate management to support SSL
#  openjdk11: OpenJDK built by Simon Frankenberger <simon@fraho.eu> from https://hg.openjdk.java.net/jdk-updates/jdk11u
#                               https://git.alpinelinux.org/aports/commit/?id=b85efc501595136485aea134946fa459bff115b0
#  fontconfig-2.13.1-r4 x86_64 : For supporting UI/ Fonts for reporting purposes
#  freetype-2.10.4-r1 x86_64: To support freetype fonts
#  Tomcat: Java Runtime Container

# https://adoptopenjdk.net/installation.html#x64_linux-jre
# Set JRE_HOME not JAVA_HOME as we don't intend to run tomcat in debug mode
ENV JRE_HOME=/usr/lib/jvm/default-jvm/jre
COPY --from=stage-0 /usr/lib/jvm/default-jvm/jre/bin/jre ${JRE_HOME}
ENV PATH=${JRE_HOME}/bin:$PATH
ENV JAVA_VERSION=11.0.12+7-alpine-r0

RUN set -eux;\
    apk update \
    && apk upgrade \
    # Now Add Support for cacerts
    # https://hackernoon.com/alpine-docker-image-with-secured-communication-ssl-tls-go-restful-api-128eb6b54f1f
    && apk add --no-cache ca-certificates\

    # Now Add Support for UI/Font configurations
    # java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
    # java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
    # https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
     \fontconfig freetype\

    && rm -rf /var/cache/apk/*

# COPY ./org-cacert-bundle.crt /usr/local/share/ca-certificates/mycert.crt
# COPY --from stage-0 /usr/local/share/ca-certificates /usr/local/share/ca-certificates
RUN set -eux;\
    chmod 755 /usr/local/share/ca-certificates\
    && update-ca-certificates\
    # Load Organisational fonts
    && mkdir -p /usr/share/fonts/default/TrueType
# COPY --from stage-0 /tmp/custom-fonts/ /usr/share/fonts/default/TrueType