#Once after building this image, run a container with sh with below
# i) cat /etc/os-release --> Look for version of Alpine Linux to substitute in Dockerfile-tomcat-jre/jre8
#  ii) from apk updated components -> Look for version of fontconfig, freetype, ca-certificates to substitute in Dockerfile-tomcat-jre/jre8
#  iii) java -version --> Look for version of open jdk to substitute in Dockerfile-tomcat-jre/jre8

FROM alpine:latest
MAINTAINER "Sathya KUMARASWAMY <sathya1104@gmail.com>"
#ENV OS_RELEASE="Alpine Linux v3.12"

# Installed main dependencies:
#  ca-certificates-bundle-20191127-r5 x86_64: for certificate management to support SSL
#  openjdk8-jre: OpenJDK built by Timo Ter√§s <timo.teras@iki.fi> from https://icedtea.classpath.org/
#                               https://git.alpinelinux.org/aports/commit/?id=f10a27abc4a038853c5b0f74655a1ca75356c93a
#  fontconfig-2.13.1-r3 x86_64 : For supporting UI/ Fonts for reporting purposes
#  freetype-2.10.4-r1 x86_64: To support freetype fonts
#  Tomcat: Java Runtime Container

# https://adoptopenjdk.net/installation.html#x64_linux-jre
# Set JRE_HOME not JAVA_HOME as we don't intend to run tomcat in debug mode
ENV JRE_HOME=/usr/lib/jvm/default-jvm/jre
RUN apk --no-cache --virtual add openjdk8-jre --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
ENV PATH=${JRE_HOME}/bin:$PATH
#ENV JAVA_VERSION=1.8.0_282-b08

RUN set -eux;\
    apk update \
    && apk upgrade \
    # Now Add Support for cacerts
    # https://hackernoon.com/alpine-docker-image-with-secured-communication-ssl-tls-go-restful-api-128eb6b54f1f
    && apk add --no-cache ca-certificates\

    # Now Add Support for UI/Font configurations
    # java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
    # java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
    # https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
     \fontconfig freetype\

    && rm -rf /var/cache/apk/*

# COPY ./org-cacert-bundle.crt /usr/local/share/ca-certificates/mycert.crt
# COPY --from stage-0 /usr/local/share/ca-certificates /usr/local/share/ca-certificates
RUN set -eux;\
    chmod 755 /usr/local/share/ca-certificates\
    && update-ca-certificates\
    # Load Organisational fonts
    && mkdir -p /usr/share/fonts/default/TrueType
# COPY --from stage-0 /tmp/custom-fonts/ /usr/share/fonts/default/TrueType
